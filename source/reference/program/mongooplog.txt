.. _mongooplog:

==============
``mongooplog``
==============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol
.. |tool-binary| replace:: mongooplog

.. deprecated:: 3.2

.. include:: /includes/admonition-mac-osx-sierra-restriction.rst

Synopsis
--------

:binary:`~bin.mongooplog` is a simple tool that polls operations from
the :term:`replication` :term:`oplog` of a remote server, and applies
them to the local server. This capability supports certain classes of
real-time migrations that require that the source server remain online
and in operation throughout the migration process.

Typically this command will take the following form:

.. code-block:: sh

   mongooplog  --from mongodb0.example.net --host mongodb1.example.net

This command copies oplog entries from the :binary:`~bin.mongod` instance
running on the host ``mongodb0.example.net`` and duplicates
operations to the host ``mongodb1.example.net``. If you do not need
to keep the :option:`--from <mongooplog --from>` host running during
the migration, consider using :binary:`~bin.mongodump` and
:binary:`~bin.mongorestore` or another :doc:`backup
</core/backups>` operation, which may be better suited to
your operation.

.. include:: /includes/extracts/require-cmd-line-mongooplog.rst

.. note::

   If the :binary:`~bin.mongod` instance specified by the :option:`--from <mongooplog --from>`
   argument is running with :setting:`authentication <auth>`, then
   :binary:`~bin.mongooplog` will not be able to copy oplog entries.

.. seealso:: :binary:`~bin.mongodump`, :binary:`~bin.mongorestore`,
   :doc:`/core/backups`, :doc:`/core/replica-set-oplog`.

Options
-------

.. include:: /includes/extracts/fact-3.0-tools-drop-dbpath-support-mongooplog.rst

.. binary:: mongooplog

.. program:: mongooplog

.. option:: --help

   Returns information on the options and use of :program:`mongooplog`.


.. option:: --verbose, -v

   Increases the amount of internal reporting returned on standard output
   or in log files. Increase the verbosity with the ``-v`` form by
   including the option multiple times, (e.g. ``-vvvvv``.)
   


.. option:: --quiet

   Runs :program:`mongooplog` in a quiet mode that attempts to limit the amount
   of output.

   This option suppresses:
   
   - connection accepted events
   
   - connection closed events
   


.. option:: --version

   Returns the :program:`mongooplog` release number.


.. option:: --uri <connectionString>

   
   .. versionadded:: 3.4.6
   
   Specify a resolvable :doc:`URI connection string
   </reference/connection-string/>` to connect to the MongoDB deployment.
   
   .. code-block:: none
   
      --uri "mongodb://[username:password@]host1[:port1][,host2[:port2],...[,hostN[:portN]]][/[database][?options]]"
   
   For more information on the components of the connection string, see
   the :doc:`Connection String URI Format
   </reference/connection-string/>` documentation.
   

   .. important::
   
      The following command-line options cannot be used in conjunction
      with :option:`--uri` option:
   
      - :option:`--host`
      - :option:`--port`
      - :option:`--username`
      - :option:`--password` (if the
        :doc:`URI </reference/connection-string/>` connection string also includes the password)
      - :option:`--authenticationDatabase`
      - :option:`--authenticationMechanism`
   
      Instead, specify these options as part of your :option:`--uri` 
      connection string.


.. option:: --host <hostname><:port>, -h <hostname><:port>

   Specifies a resolvable hostname for the :binary:`~bin.mongod` instance to
   which :binary:`~bin.mongooplog` will apply :term:`oplog` operations
   retrieved from the server specified by the :option:`--from <mongooplog
   --from>` option.
   
   By default :program:`mongooplog` attempts to connect to a MongoDB instance running
   on the localhost on port number ``27017``.
   
   To connect to a replica set, specify the :setting:`replica set name
   <~replication.replSetName>` and a seed list of set members. Use the
   following form:
   
   .. code-block:: none
   
      <replSetName>/<hostname1><:port>,<hostname2><:port>,<...>
   
   You can always connect directly to a single MongoDB instance by
   specifying the host and port number directly.


.. option:: --port

   Specifies the port number of the :binary:`~bin.mongod` instance where
   :binary:`~bin.mongooplog` will apply :term:`oplog` entries. Specify
   this option only if the MongoDB instance to connect to is not
   running on the standard port of ``27017``. You may also specify a
   port number using the :option:`--host <mongooplog --host>` command.
   


.. option:: --ipv6

   *Removed in version 3.0.*
   
   Enables IPv6 support and allows :program:`mongooplog` to connect to the
   MongoDB instance using an IPv6 network. Prior to MongoDB 3.0, you
   had to specify :option:`--ipv6` to use IPv6. In MongoDB 3.0 and later, IPv6
   is always enabled.


.. option:: --ssl

   .. versionadded:: 2.6
   
   Enables connection to a :binary:`~bin.mongod` or :binary:`~bin.mongos` that has
   TLS/SSL support enabled.
   
   .. include:: /includes/extracts/ssl-facts-see-more.rst
   


.. option:: --sslCAFile <filename>

   .. versionadded:: 2.6
   
   Specifies the :file:`.pem` file that contains the root certificate chain
   from the Certificate Authority. Specify the file name of the
   :file:`.pem` file using relative or absolute paths.
   
   .. include:: /includes/extracts/ssl-facts-ca-file.rst
   
   .. warning::
   
      **Version 3.2 and earlier:** For TLS/SSL connections (``--ssl``) to
      :binary:`~bin.mongod` and :binary:`~bin.mongos`, if the :program:`mongooplog` runs without the
      :option:`--sslCAFile`, :program:`mongooplog` will not attempt
      to validate the server certificates. This creates a vulnerability
      to expired :binary:`~bin.mongod` and :binary:`~bin.mongos` certificates as
      well as to foreign processes posing as valid :binary:`~bin.mongod` or
      :binary:`~bin.mongos` instances. Ensure that you *always* specify the
      CA file to validate the server certificates in cases where
      intrusion is a possibility.
   
   .. include:: /includes/extracts/ssl-facts-see-more.rst


.. option:: --sslPEMKeyFile <filename>

   .. versionadded:: 2.6
   
   Specifies the :file:`.pem` file that contains both the TLS/SSL certificate
   and key. Specify the file name of the :file:`.pem` file using relative
   or absolute paths.
   
   This option is required when using the :option:`--ssl` option to connect
   to a :binary:`~bin.mongod` or :binary:`~bin.mongos` that has
   :setting:`~net.ssl.CAFile` enabled *without*
   :setting:`~net.ssl.allowConnectionsWithoutCertificates`.
   
   .. include:: /includes/extracts/ssl-facts-see-more.rst
   


.. option:: --sslPEMKeyPassword <value>

   .. versionadded:: 2.6
   
   Specifies the password to de-crypt the certificate-key file (i.e.
   :option:`--sslPEMKeyFile`). Use the :option:`--sslPEMKeyPassword` option only if the
   certificate-key file is encrypted. In all cases, the :program:`mongooplog` will
   redact the password from all logging and reporting output.
   
   If the private key in the PEM file is encrypted and you do not specify
   the :option:`--sslPEMKeyPassword` option, the :program:`mongooplog` will prompt for a passphrase. See
   :ref:`ssl-certificate-password`.
   
   .. include:: /includes/extracts/ssl-facts-see-more.rst


.. option:: --sslCRLFile <filename>

   .. versionadded:: 2.6
   
   Specifies the :file:`.pem` file that contains the Certificate Revocation
   List. Specify the file name of the :file:`.pem` file using relative or
   absolute paths.
   
   .. include:: /includes/extracts/ssl-facts-see-more.rst
   


.. option:: --sslAllowInvalidCertificates

   .. versionadded:: 2.6
   
   Bypasses the validation checks for server certificates and allows
   the use of invalid certificates. When using the
   :setting:`~net.ssl.allowInvalidCertificates` setting, MongoDB logs as a
   warning the use of the invalid certificate.
   
   .. include:: /includes/extracts/ssl-facts-x509-invalid-certificate.rst
   
   .. include:: /includes/extracts/ssl-facts-invalid-cert-warning-clients.rst
   
   .. include:: /includes/extracts/ssl-facts-see-more.rst
   


.. option:: --sslAllowInvalidHostnames

   .. versionadded:: 3.0
   
   Disables the validation of the hostnames in TLS/SSL certificates. Allows
   :program:`mongooplog` to connect to MongoDB instances even if the hostname in their
   certificates do not match the specified hostname.
   
   .. include:: /includes/extracts/ssl-facts-see-more.rst


.. option:: --sslFIPSMode

   .. versionadded:: 2.6
   
   Directs the :program:`mongooplog` to use the FIPS mode of the installed OpenSSL
   library. Your system must have a FIPS compliant OpenSSL library to use
   the :option:`--sslFIPSMode` option.
   
   .. include:: /includes/note-fips-is-enterprise-only.rst


.. option:: --username <username>, -u <username>

   Specifies a username with which to authenticate to a MongoDB database
   that uses authentication. Use in conjunction with the :option:`--password` and
   :option:`--authenticationDatabase` options.
   
   .. note::
   
      You cannot specify both :option:`--username` and :option:`--uri`.


.. option:: --password <password>, -p <password>

   Specifies a password with which to authenticate to a MongoDB database
   that uses authentication. Use in conjunction with the :option:`--username` and
   :option:`--authenticationDatabase` options.
   
   .. versionchanged:: 3.0.2
   
      To prompt the user
      for the password, pass the :option:`--username` option without
      :option:`--password` or specify an empty string as the :option:`--password` value,
      as in ``--password ""`` .
   
   .. note::
   
      You cannot specify both :option:`--password` and :option:`--uri`.


.. option:: --authenticationDatabase <dbname>

   Specifies the authentication database where the specified :option:`--username` has been created.
   See :ref:`user-authentication-database`.
   
   .. note::
   
      You cannot specify both :option:`--authenticationDatabase` and :option:`--uri`.


.. option:: --authenticationMechanism <name>

   *Default*: SCRAM-SHA-1

   .. versionchanged:: 2.6
      Added support for the ``PLAIN`` and ``MONGODB-X509`` authentication
      mechanisms.
   
   .. versionchanged:: 3.0
      Added support for the ``SCRAM-SHA-1`` authentication mechanism. Changed
      default mechanism to ``SCRAM-SHA-1``.
   

   Specifies the authentication mechanism the :program:`mongooplog` instance uses to
   authenticate to the :binary:`~bin.mongod` or :binary:`~bin.mongos`.
   
   .. list-table::
      :header-rows: 1
      :widths: 20 40
   
      * - Value
   
        - Description
   
      * - :ref:`SCRAM-SHA-1 <authentication-scram-sha-1>`
   
        - `RFC 5802 <https://tools.ietf.org/html/rfc5802>`_ standard
          Salted Challenge Response Authentication Mechanism using the SHA1
          hash function.
   
      * - :ref:`MONGODB-CR <authentication-mongodb-cr>`
   
        - MongoDB challenge/response authentication.
   
      * - :ref:`MONGODB-X509 <security-auth-x509>`
   
        - MongoDB TLS/SSL certificate authentication.
   
      * - :ref:`GSSAPI <security-auth-kerberos>` (Kerberos)
   
        - External authentication using Kerberos. This mechanism is
          available only in `MongoDB Enterprise
          <http://www.mongodb.com/products/mongodb-enterprise-advanced?jmp-docs>`_.
   
      * - :ref:`PLAIN <security-auth-ldap>` (LDAP SASL)
   
        - External authentication using LDAP. You can also use ``PLAIN``
          for authenticating in-database users. ``PLAIN`` transmits
          passwords in plain text. This mechanism is available only in
          `MongoDB Enterprise
          <http://www.mongodb.com/products/mongodb-enterprise-advanced?jmp-docs>`_.
   
   .. note::
   
      You cannot specify both :option:`--authenticationMechanism` and :option:`--uri`.


.. option:: --gssapiServiceName

   .. versionadded:: 2.6
   
   Specify the name of the service using :doc:`GSSAPI/Kerberos
   </core/kerberos>`. Only required if the service does not use the
   default name of ``mongodb``.
   
   This option is available only in MongoDB Enterprise.
   


.. option:: --gssapiHostName

   .. versionadded:: 2.6
   
   Specify the hostname of a service using :doc:`GSSAPI/Kerberos
   </core/kerberos>`. *Only* required if the hostname of a machine does
   not match the hostname resolved by DNS.
   
   This option is available only in MongoDB Enterprise.
   


.. option:: --seconds <number>, -s <number>

   Specify a number of seconds of operations for :binary:`~bin.mongooplog` to
   pull from the :option:`remote host <mongooplog --from>`. Unless
   specified the default value is ``86400`` seconds, or 24 hours.
   


.. option:: --from <host[:port]>

   Specify the host for :binary:`~bin.mongooplog` to retrieve :term:`oplog`
   operations from. :binary:`~bin.mongooplog` *requires* this option.
   
   Unless you specify the :option:`--host <mongooplog --host>` option,
   :binary:`~bin.mongooplog` will apply the operations collected with this
   option to the oplog of the :binary:`~bin.mongod` instance running on the
   localhost interface connected to port ``27017``.
   


.. option:: --oplogns <namespace>

   Specify a namespace in the :option:`--from <mongooplog --from>` host
   where the oplog resides. The default value is ``local.oplog.rs``, which
   is the where :term:`replica set` members store their operation log.
   However, if you've copied :term:`oplog` entries into another
   database or collection or are pulling oplog entries from a
   :doc:`master-slave </core/master-slave>` deployment, use :option:`--oplogns` to
   apply oplog entries stored in another location. Namespaces take the
   form of ``[database].[collection]``.


Use
---

Consider the following prototype :binary:`~bin.mongooplog` command:

.. code-block:: sh

   mongooplog  --from mongodb0.example.net --host mongodb1.example.net

Here, entries from the :term:`oplog` of the :binary:`~bin.mongod` running
on port ``27017``. This only pull entries from the last 24 hours.

Use the :option:`--seconds <mongooplog --seconds>` argument to capture
a greater or smaller amount of time. Consider the following example:

.. code-block:: sh

   mongooplog  --from mongodb0.example.net --seconds 172800

In this operation, :binary:`~bin.mongooplog` captures 2 full days of
operations. To migrate 12 hours of :term:`oplog` entries, use the
following form:

.. code-block:: sh

   mongooplog  --from mongodb0.example.net --seconds 43200
